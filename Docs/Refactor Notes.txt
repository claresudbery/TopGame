PrepareActualData

Golden Masters:
	Graphics-001: Only 52 sets of data (one for each possible number of cards in the loop) - didn't take account of different numbers of players.
	Graphics-001-new-props: Same as 001, but with NumTotalSegments renamed to NumCardsInLoop, and with new NumPlayersInGame added - so that it can be compared with newer versions.
	Graphics-002: (52 x 11) sets of data - for each possible number of cards, also had between 2 and 12 players.
	Graphics-003: c3bccdf17481809679462db7fd60915d30011a02: Lost track of what I was doing. Regenerated the file to make sure I hadn't changed anythign and forgotten.
	Graphics-004: c926496202b08255406564e0ef3ab5d413e4795e: Checked out previous version of code to see what golden master was generated.
	Graphics-005: f6c721b4b7aad6a9d86388c733761992643671e7: Bug fixed - GetMaxCentralAngle is now using the correct number of hands in its if statement, rather than always using 3. 
	Graphics-006: bb7e6dc979a0bb0f08613c9a9858ab6f690f25cf: After creating GoldenMasterRegion and GoldenMasterPoint - trying to work out why data has changed.
	Graphics-007: 122301258787400c24908ac3f9f5cd2f62355a8c: Bug fixed: where each new golden master pass was referencing the same underlying data, which was changing each time.
	Graphics-008: 34f6256eeb44ce5ab5354b4fa279d4678201fa6f: GraphicsPath objects now store lines and arcs instead of points
	Graphics-009: 5ec15a758a5b1e7f2e5397010bb34d546cfd266e: Added the concept of mini petal regions
	Graphics-010: d5e6b61af797148257b393ba9c783419a348c543: Added golden-master arc regions
	Graphics-011: 53a7071a4f829cf0061403c48ffe957bf97aa9a7: Added golden-master straight-edged regions
	Graphics-012: d2febc927be89761dc04d21b0b3b2a09fcc90dca: Regenerated to take account of renamed properties on golden master classes.
	Graphics-013: 30be24b2d48d566cbb2d7679fe3334aaec3ef66f: New MiniPetalRegion class, with its own Corners collection.
	Graphics-014: c3749aec440d8f7d831a5874da5d1ba5162ed7a6: All regions now in one Regions collection.
	Graphics-015: abc355b5624b4a017fc583ca3eaff7116fd3eb84: Contains bug fix to make all arc regions use the "move along line" logic
	Graphics-016: 3900aec538143a000df55552e285226e9143cb16: All regions now have a type description, and all mini-petal regions have two corners (instead of only one)
	Graphics-017: 8d00925a572eb6470ed82179bff49022734885b1: No longer using json deserialisation decorators in the golden master model objects.
	Graphics-018: 1ff1691a9a55e40ca5a40b2d02e1c3b091eea2f7: Renamed a load of variables.
	Graphics-019: 39a00a28414e5c7c312b1d1d78ffe776c33214ef: Regenerated to get slightly differently-rounded numbers caused by refactor
	Graphics-020: 39a00a28414e5c7c312b1d1d78ffe776c33214ef: Regenerated to take account of arc paths swapping start and end points around (to fix visual leakage bug)
	Game-001: 7535145f77fed9c8847ded8885be042d399a0bde: First attempt to store game data. Storing all moves for 2 to 12 players, using unshuffled deck each time.
	Game-002: 6d241618fcaff0daa36a943684c44c01d6f531d0: Added player start hands and num players.
	Game-003: 8d00925a572eb6470ed82179bff49022734885b1: No longer using json deserialisation decorators in the golden master model objects.
	
Mongo DB:
	Links:
		Installing: https://docs.mongodb.com/getting-started/shell/tutorial/install-mongodb-on-windows/
		Using with C#: 
			https://docs.mongodb.com/ecosystem/drivers/csharp/
			https://docs.mongodb.com/getting-started/csharp/
	Local:
		Location: C:\Program Files\MongoDB\Server\3.2
		Config: C:\Program Files\MongoDB\Server\3.2\mongod.cfg
		default data directory path is c:\data\db
		To start MongoDB, run mongod.exe. In Powershell:
			cd "C:\Program Files\MongoDB\Server\3.2\bin"
			.\mongod.exe
		
To do:
	Get rid of AngleB and AngleC
	Get rid of ConstantCentralSegmentLength
	Make sure all graphics-dependent code is only accessible to OnePLayerGraphicsLoop, not GraphicsData - this will mean removing the ActualPath object from TopGameGraphicsPath?
	PopulateFromLengthTopAngleAndStartPoint: Get rid of tempRelativePoint!
	Get rid of MakeObsoleteOuterAndInnerPath and associated objects (but not the squares! And need to add new PetalPath thing)
	Start using PointF instead of Point throughout? (allows for decimals, so no rounding needed)
	Use interfaces instead of inheritance for GoldenMasterRegion and its descendants?
	The reasons the neighbouring parallelograms and arcs don't share corners are
		1) the arcs all use actualArcCentre as one of their corners
		2) the arcs use MoveAlongLineByFraction on actualOuterArcStart and actualOuterArcEnd, which means they don't share those points with the parallelograms.
		3) the lines drawn from actualArcCentre to actualOuterArcStart and actualOuterArcEnd don't quite line up with the lines which mark the ends of the petal region?
	
**************************************
WORKING OUT WHAT KIND OF DATA TO STORE FOR REGIONS
**************************************
	
**************************************
This is basically its own mini petal - it's what happens if there are only two cards
**************************************
using (GraphicsPath tempRegionPath = new GraphicsPath())
{
	// the division is the arc itself.
	tempRegionPath.AddArc(_vitalStatistics.outerArcSquare.Rectangle, (float)_vitalStatistics.arcStartAngle, (float)180);
	tempRegionPath.AddLine(_vitalStatistics.actualOuterArcStart.Point, _vitalStatistics.actualOuterArcEnd.Point);
	subRegions.Add(new Region(tempRegionPath));
	
	
**************************************
ARC REGION
**************************************
_vitalStatistics.outerPath.AddLine(_vitalStatistics.origin, _vitalStatistics.actualOuterArcStart);
_vitalStatistics.outerPath.ActualPath.AddArc(_vitalStatistics.outerArcSquare.Rectangle, (float)_vitalStatistics.arcStartAngle, (float)180);
_vitalStatistics.innerPath.AddLine(_vitalStatistics.actualInnerPetalSource, _vitalStatistics.actualInnerArcStart);
_vitalStatistics.innerPath.ActualPath.AddArc(_vitalStatistics.innerArcSquare.Rectangle, (float)_vitalStatistics.arcStartAngle, (float)180);

using (Region petalRegion = new Region(_vitalStatistics.outerPath.ActualPath))
{
	if (_vitalStatistics.innerArmLength > 0)
	{
		petalRegion.Exclude(_vitalStatistics.innerPath.ActualPath);
	}
	using (GraphicsPath tempRegionPath = new GraphicsPath())
	{
		tempRegionPath.AddLine(pointA.Point, pointB.Point);
		tempRegionPath.AddLine(pointB.Point, pointC.Point);
		tempRegionPath.AddLine(pointC.Point, pointA.Point);

		using (Region tempRegion = new Region(petalRegion.Clone().GetRegionData()))
		{
			tempRegion.Intersect(tempRegionPath);
			subRegions.Add(new Region(tempRegion.GetRegionData()));
		}

	
**************************************
TRIANGLE REGION
**************************************
using (GraphicsPath tempRegionPath = new GraphicsPath())
{
	tempRegionPath.AddLine(pointA.Point, pointB.Point);
	tempRegionPath.AddLine(pointB.Point, pointC.Point);
	tempRegionPath.AddLine(pointC.Point, pointA.Point);

	subRegions.Add(new Region(tempRegionPath));
	
	
**************************************
PARALLELOGRAM REGION
**************************************
using (GraphicsPath tempRegionPath = new GraphicsPath())
{
	tempRegionPath.AddLine(pointA.Point, pointB.Point);
	tempRegionPath.AddLine(pointB.Point, pointC.Point);
	tempRegionPath.AddLine(pointC.Point, pointD.Point);
	tempRegionPath.AddLine(pointD.Point, pointA.Point);

	subRegions.Add(new Region(tempRegionPath));

	
	
*******************************************
bug fixing
*******************************************
2 cards in loop, 2 players in game:
	latest code - at time of building object:
		AddTriangularRegion
			origin: 215,215
			startArmDivisionStarts: 201,215
			actualInnerPetalSource: 202,219
		AddTriangularRegion
			origin: 215,215
			endArmDivisionStarts: 203,222
			actualInnerPetalSource: 202,219
	original code - at time of building object:
		AddTriangularRegion
			origin: 215,215
			startArmDivisionStarts: 201,215
			actualInnerPetalSource: 202,219
		AddTriangularRegion
			origin: 215,215
			endArmDivisionStarts: 203,222
			actualInnerPetalSource: 202,219
	original code - allGoldenMasters.GoldenMasters[11].TopGameRegions[0].TopGamePoints[2].Y - later:
		2,3: 223
		2,4: 224		

	**************
	before the bug:
	**************
	"endArmDivisionEnds": {
          "Points": [
            {
              "X": 211,
              "Y": 223
            }
			...
      "TopGameRegions": [
        {
          "TopGamePoints": [
            {
              "X": 215,
              "Y": 215
            },
            {
              "X": 201,
              "Y": 215
            },
            {
              "X": 211,
              "Y": 223
            }
          ]
        },
        {
          "TopGamePoints": [
            {
              "X": 215,
              "Y": 215
            },
            {
              "X": 203,
              "Y": 222
            },
            {
              "X": 211,
              "Y": 223
            }
	**************
	after the bug:
	**************
        "endArmDivisionEnds": {
          "Points": [
            {
              "X": 211,
              "Y": 223
            }
			...
      "TopGameRegions": [
        {
          "TopGamePoints": [
            {
              "X": 215,
              "Y": 215
            },
            {
              "X": 201,
              "Y": 215
            },
            {
              "X": 202,
              "Y": 219
            }
          ]
        },
        {
          "TopGamePoints": [
            {
              "X": 215,
              "Y": 215
            },
            {
              "X": 203,
              "Y": 222
            },
            {
              "X": 202,
              "Y": 219
            }